CAPITALIZE THE FIRST LETTER OF EACH WORD IN A STRING

import java.util.*;
import java.lang.*;
public class Main
{
	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
	    String str = s.nextLine();
	    
	    char ch[] = str.toCharArray();
	    for (int i=0; i<str.length(); i++){
	        if(i==0 && ch[i]>='a' && ch[i]<='z')
	            System.out.printf("%C",ch[i]);
	        else if (ch[i]==' ' && ch[i+1]>='a' && ch[i+1]<='z') {
	        System.out.printf(" %C",ch[i+1]);
	        i++;
	        }
	        else System.out.print(ch[i]);
	    }
	}
}

EXPAND CHARACTERS BASED ON THE DIGIT AFTER IT (ONLY SINGLE DIGIT)

EXAMPLE: A3B4 -> AAABBBB

import java.util.*;
class Main {
  public static void main(String[] args){
    Scanner inn = new Scanner(System.in);
    String s = inn.nextLine();
    char ch[] = s.toCharArray(); int a=0 ; 
    for(int i=1;i<ch.length;i++) {
      if( !(ch[i]>='a' && ch[i]<='z' ))
      a = (int)ch[i] - 48;
      while( a > 0) {
        System.out.print(ch[i-1]);
        a--;
      }
    }
  }
}

COMPRESS CONSECUTIVE CHARACTERS

ip: aabbb
op: a2b3

import java.util.*;
import java.lang.*;
public class Main
{
	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
		String str = s.nextLine();
		char ch[] = str.toCharArray();
		
		int count=1, i=0, j=0;
		
		for(i=0; i<str.length(); i++){
		    count=1;
		    for(j=i+1; j<ch.length; j++){
		        if (ch[i]==ch[j]){
		        count++;
		    }
		    else break;
		    
		    }
		    System.out.print(ch[i]);
		    System.out.print(count);
		    i=j-1;
		}
	}
}

BITWISE OPERATION
A - AND; B - OR; C - XOR

ip: 1A0B1 
op: 1

import java.util.*;
import java.lang.*;
public class Main
{
	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
		String str = s.nextLine();
		char ch[] = str.toCharArray();
		
		int count=1, i=0, n=0;
		
		for(i=1; i<ch.length; i++){
		    
		    while(ch[i]=='A' || ch[i]=='B' || ch[i]=='C'){
		        
		        if(ch[i]=='A') n = (int) (ch[i-1]-48 & ch[i+1]-48) ;		    
		        else if(ch[i]=='B') n = (int) (ch[i-1]-48 | ch[i+1]-48) ;
		        else if(ch[i]=='C') n = (int) (ch[i-1]-48 ^ ch[i+1]-48) ;
		        
		        ch[i+1] = (char) (n+48);
		        i++;
		    }
		  }
		  System.out.print(ch[i-1]);
	}
}

PANAGRAM - String includes all alphabets

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    String str = sc.nextLine();
	    str = str.toLowerCase();
	    char ch[] = str.toCharArray();
	    //char c[] = new char[];
	    int count=0;
	    for(char i='a'; i<='z'; i++) {
    	    for(int j=0; j<ch.length; j++){
    	        if(i == ch[j]){
    	            count++;
    	            //System.out.println(count);
    	            break;
    	        }
    	    }
	    }
	    System.out.print((count==26)?"YES":"NO");
	}
}

--------------------------------------------------------------------------------------

NUMBER NAMES (0-999)

import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner obj = new Scanner(System.in);
		String Ones[]= {"Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"};
		String Doubles[]={"Eleven","Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
		String[] tens = {"Ten","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty", "Ninety"};
		int n = obj.nextInt();
		if(n==0) System.out.print("zero");
		while(n > 0) {
			if(n < 10) {
			    System.out.print(Ones[n]);
			    break;
			}
			else if(n>9 && n<100) {
				if(n>10 && n<20){
				    System.out.print(Doubles[n%10-1]);
				    break;
				}
				else{
				    System.out.print(tens[n/10-1]+" ");
				    if(n%10>0)
				        System.out.print(Ones[n%10]);
				    break;
				}
			}
			else{
			    if(n%100==0) {
			        System.out.print(Ones[n/100]+" Hundred");
			        break;
			    }
			    else{
			        System.out.print(Ones[n/100]+" Hundred ");
			    }
			}
			n=n-((n/100)*100);
		}
	}
}

STRING ANAGRAM

import java.util.*;
import java.lang.*;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str =  sc.nextLine();
		String s =  sc.nextLine();
		str = str.toLowerCase();
		s=s.toLowerCase();
		
	    char ch[] = str.toCharArray();
	    char c[] = s.toCharArray();
	    int count=0;
	    
	   //if(ch.length != c.length){
	   //  System.out.print("NO");
	   //  return;
	   //}
	   
	    int k=0; 
	    char temp=' ';
	    
	    for(int i=0; i<ch.length; i++){
	        for(int j=k; j<c.length; j++){
	            if(ch[i] == c[j]) {
	                temp=c[j];
	                c[j]=c[k];
	                c[k]=temp;
	                k++;
	                count++;
	                break;
	            }
	        }
	    }
	    System.out.print((count == ch.length)?"YES" : "NO");
	}
}

REVERSING THE WORDS IN A STRING

STDIN: One Two Three

Output: Three Two One 

import java.util.*;
import java.lang.*;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str1 =  sc.nextLine();
		//String str2 =  sc.nextLine().toLowerCase();
    String s1[] = str1.split(" ");
    //String s2[] = str2.split(" ");
    
    for(int i=s1.length-1; i>=0; i--)
      System.out.print(s1[i]+" ");
	}
}


REVERSING EACH WORD INDIVIDUALLY IN A STRING

STDIN : One Two Three

Output: enO owT eerhT

import java.util.*;
import java.lang.*;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str1 =  sc.nextLine();
    String s1[] = str1.split(" ");
    
    for(int i=0; i<s1.length; i++){
      char ch[] = s1[i].toCharArray();
      for(int j=ch.length-1; j>=0; j--){
        System.out.print(ch[j]);
      }
      System.out.print(" ");
    }
	}
}


EVERSING ONLY LETTERS WHILE KEEPING SPECIAL CHARACTERS/DIGITS IN PLACE

STDIN: how to train your dragon !
Output: nog ar druoy niar totwoh !
https://www.onlinegdb.com/2LcFBjDNY

import java.util.*;
import java.lang.*;
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String str =  sc.nextLine();
		String s = "";
    char ch[] = str.toCharArray();          //niartotwoh
    
    for(int i=ch.length-1; i>=0; i--){
      if((ch[i]>='a' && ch[i]<='z')){
        s = s+ch[i];
      }
    }
    StringBuilder sb = new StringBuilder(s);
    for(int i=0; i<str.length(); i++){
      if(!(ch[i]>='a' && ch[i]<='z'))
        sb.insert(i, ch[i]);
    }
    //String ans = sb.toString();
    System.out.print(sb);
	}
}
