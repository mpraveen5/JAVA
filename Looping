N MULTIPLES OF 11 

import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s = new Scanner(System.in);
	    int n = s.nextInt();
	    int i = 1;
	    while(i<=n){
	       System.out.println(11*i);
	       i++;
	    }
    }
}


SUM OF ODD & EVEN NUMBERS IN THE GIVEN RANGE

import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s = new Scanner(System.in);
	    System.out.print("Lower range : ");
	    int a = s.nextInt();
	    System.out.print("Upper range : ");
	    int b = s.nextInt();
	    int Even_sum = 0;
	    int Odd_sum = 0;
	    for (int i=a; i<=b; i++){
	        
	        if (i%2 == 0){
	            Even_sum = Even_sum+i;
	        }
	        else
	            Odd_sum = Odd_sum+i;
	    }
	    System.out.println("Even Sum: "+Even_sum);
	    System.out.println("Odd Sum: "+Odd_sum);
	}
}


COUNT NUMBER OF DIGITS

import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s = new Scanner(System.in);
	    int n = s.nextInt();
	    int count = 0;
	    if(n!=0){
	    while(n!=0){
    	    n=n/10;
    	    count++;
	    }
	    System.out.print(count);
	    }
	    else if (n==0){
	        System.out.print("1");
	    }
	}
}


GIVEN NUMBER IS PRIME OR NOT

import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s = new Scanner(System.in);
	    int n = s.nextInt();
	    int count = 0, flag=0;
	    if (n==1) {
	        System.out.print("Neither Prime nor Composite");
	        flag=1;
	    }
	    for (int i=2; i<n; i++){
	        if(n%i == 0)
	            count++;
	    }
	    if(flag==0){
	    if (count==0)
	        System.out.print("Prime");
	    else if (count>0)
	    System.out.print("Not a prime");
	    }
	}
}


ARMSTRONG NUMBER (OR) NARCISSISTIC NUMBER

import java.util.Scanner;
class Main {
public static void main(String[] smart) {
  Scanner obj = new Scanner(System.in);
  int n = obj.nextInt() ; 
  int temp = n , count = 0 , power = 1 , answer = 0; 
    while(temp > 0) { 
      count++; //3
      temp /= 10 ; 
    }
  temp = n ; 
    while(temp > 0) { 
      for(int i=1;i<=count;i++)  
      power *= (temp%10) ;  
      answer += power ;  
      power = 1 ; 
      temp/=10; 
    }
    System.out.print((n==answer)?"Yes":"No");
  }
}

PATTERNS

RIGHT-ALIGNED RIGHT-ANGLE TRIANGLE

import java.util.Scanner;
class Main {
public static void main(String[] smart) {
    Scanner s = new Scanner(System.in);
    int n = s.nextInt();
    	for (int i=n; i>0; i--){
	for (int j=1; j<=n; j++){
		if(i==j || i<j)
		System.out.print("* ");
		else
		System.out.print("  ");
	}
	System.out.println();
	}
    }
}

'S' PATTERN

import java.util.Scanner;
class Main {
public static void main(String[] smart) {
    Scanner s = new Scanner(System.in);
	int n = s.nextInt();
    for (int i=1; i<=n; i++){
	    for (int j=1; j<=n; j++){
		  if(i==1 || i==n || i== (n/2)+1 || (i<= (n/2)+1 && j==1) ||(i>= (n/2)+1 && j==n))
		    System.out.print("* ");
		  else
		    System.out.print("  ");
		 }
		 System.out.println();
	  }
    }
}

SWASTHI PATTERN

import java.util.Scanner;
class Main {
public static void main(String[] smart) {
    Scanner s = new Scanner(System.in);
    int n = s.nextInt();
    for (int i=1; i<=n; i++){
	for (int j=1; j<=n; j++){
		if(i==1 && j>= (n/2)+1 || i==n && j<= (n/2)+1 || i== (n/2)+1 || j== (n/2)+1 || (i<= (n/2)+1 && j==1) ||(i>= (n/2)+1 && j==n))
		System.out.print("* ");
		else
		System.out.print("  ");
		}
	System.out.println();
	}
    }
}

PRIMARY DIAGONAL

import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        for (int i = 1; i <= n; i++) {       
            for (int j = 1; j <= n; j++) {   
                if (j == i)                  
                    System.out.print("* ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }
}

LEFT-ALIGNED INVERTED NUMBER TRIANGLE

import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
	    Scanner s = new Scanner(System.in);
	    int n = s.nextInt();
		for (int i=n; i>=1; i--){
		    for (int j=1; j<=(n*2-1); j++){
		        
		        if(j<=i*2-1)
		            System.out.print(j);
		        else
		            System.out.print(" ");
		    }
		    System.out.println();
		}
	}
}
